name: workflow test

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Installing Dependencies for Tests
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest tests --junit-xml test-results/pytest.xml
          cat test-results/pytest.xml
     #     coverage run -m pytest
   #       pytest --junitxml=test_result.xml
          
          # pytest --junitxml=test_result.xml

           
          # Separate coverage report generation if using coverage package
        #  coverage xml -o /home/runner/work/temp-replication/temp-replication/test_result.xml

      - name: generate coverage report
        run: |
          pytest --cov=. --cov-report=xml
#          cat coverage.xml

      - name: Setup .NET Core # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
          dotnet-quality: 'ga'

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
        with:
          reports: 'coverage.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
          reporttypes: 'Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, OpenCover, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, Html_BlueRed_Summary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, SvgChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: cov.xml # Artifact name        
          path: coveragereport # Directory containing files to upload  
      - name: upload result
        env:
          CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
          CODACY_ORGANIZATION_PROVIDER: gh
          CODACY_USERNAME: Saurabhkr952
          CODACY_PROJECT_NAME: temp-replication
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l python --force-language -r coveragereport/cov.xml
#      - name: Run codacy-coverage-reporter
#        uses: codacy/codacy-coverage-reporter-action@v1.0.0
#        with:
#          project-token: ${{ secrets.CODACY_API_TOKEN }}
#          coverage-reports: cobertura.xml
        
